{"mappings":"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","sources":["src/index.js","src/core/gpp-str.js","src/core/gpp-header.js","src/core/data-types.js","src/core/utils.js","src/sections/us-states/ca/uspca.js"],"sourcesContent":["import { GPPString } from \"./core/gpp-str\";\r\nimport { UspcaSection } from \"./sections/us-states/ca/uspca\";\r\n\r\nexport { GPPString, UspcaSection };\r\n","import { GPPHeader } from \"./gpp-header\";\nimport { encode2BitStr2Base64Websafe } from \"./utils\";\n\nconst GPP_TYPE = 3;\nconst GPP_VERSION = 1;\n\nclass GPPString {\n  #sections = new Map();\n\n  static Builder = class {\n    #sections = new Map();\n\n    addSection(section) {\n      this.#sections.set(section.gppSectionID, section);\n      return this;\n    }\n\n    build() {\n      return new GPPString(this.#sections);\n    }\n  };\n\n  constructor(sections) {\n    this.#sections = sections;\n  }\n\n  encode2BitStr() {\n    let encodedString = \"\";\n    if (this.#sections.size === 0) {\n      throw \"You need to add sections to be able to build the GPP string\";\n    }\n    const sortedSections = this.#sortSections();\n    const encodedHeader = new GPPHeader(Array.from(sortedSections.keys()));\n    encodedString += encodedHeader.encode2BitStr();\n\n    for (const [key, value] of this.#sections) {\n      encodedString += \"~\" + value.encode2BitStr();\n    }\n    return encodedString;\n  }\n\n  encode2Base64Websafe() {\n    let encodedString = \"\";\n    if (this.#sections.size === 0) {\n      throw \"You need to add sections to be able to build the GPP string\";\n    }\n    const sortedSections = this.#sortSections();\n    const encodedHeader = new GPPHeader(Array.from(sortedSections.keys()));\n    encodedString += encode2BitStr2Base64Websafe(encodedHeader.encode2BitStr());\n\n    for (const [key, value] of this.#sections) {\n      encodedString += \"~\" + encode2BitStr2Base64Websafe(value.encode2BitStr());\n    }\n    return encodedString;\n  }\n\n  toString() {\n    return this.encode2BitStr();\n  }\n\n  #sortSections() {\n    return new Map(\n      [...this.#sections].sort((a, b) => String(a[0]).localeCompare(b[0]))\n    );\n  }\n}\n\nexport { GPPString };\n","import { IntegerFixedLength, RangeFibonacci } from \"./data-types\";\n\nclass GPPHeader {\n  #type = new IntegerFixedLength.Builder().setLength(6).setValue(3).build();\n  #version = new IntegerFixedLength.Builder().setLength(6).setValue(1).build();\n  #sections = null;\n\n  constructor(sections) {\n    if (!Array.isArray(sections) || sections.length === 0) {\n      throw `sections must be an Array sections IDs of length > 0, for example: [2, 6]`;\n    }\n    const rangeFibonacci = new RangeFibonacci.Builder();\n    for (let n = 0; n < sections.length; n++) {\n      rangeFibonacci.addSingle(sections[n]);\n    }\n    this.#sections = rangeFibonacci.build();\n  }\n\n  encode2BitStr() {\n    let encodedString = \"\";\n    encodedString += this.#type.encode2BitStr();\n    encodedString += this.#version.encode2BitStr();\n    encodedString += this.#sections.encode2BitStr();\n    return encodedString;\n  }\n}\n\nexport { GPPHeader };\n","import { dec2bin, isOverflowed, int2Fibonacci } from \"./utils\";\r\n\r\n//\r\n// Boolean\r\n//\r\n\r\nclass Boolean {\r\n  #value = null;\r\n\r\n  static Builder = class {\r\n    #value = false;\r\n\r\n    setValue(value) {\r\n      this.#value = !!value;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      const boolean = new Boolean(this.#value);\r\n      return boolean;\r\n    }\r\n  };\r\n\r\n  constructor(value) {\r\n    this.#value = value;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      value: this.#value,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    if (this.#value) return \"1\";\r\n    else return \"0\";\r\n  }\r\n}\r\n\r\n//\r\n// IntegerFixedLength\r\n//\r\n\r\nclass IntegerFixedLength {\r\n  #value = null;\r\n  #length = null;\r\n\r\n  static Builder = class {\r\n    #value = 0;\r\n    #length = 1;\r\n\r\n    setLength(length = 1) {\r\n      if (!Number.isInteger(length) && length > 1) {\r\n        throw \"length param must be a positive integer\";\r\n      }\r\n      this.#checkIfTruncated(this.#value, length);\r\n      this.#length = length;\r\n      return this;\r\n    }\r\n\r\n    setValue(value) {\r\n      if (!Number.isInteger(value) && value >= 0) {\r\n        throw \"value param must be a non-negative integer\";\r\n      }\r\n      this.#checkIfTruncated(value, this.#length);\r\n      this.#value = value;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      const integer = new IntegerFixedLength(this.#value, this.#length);\r\n      return integer;\r\n    }\r\n\r\n    #checkIfTruncated(value, length) {\r\n      const binString = dec2bin(value);\r\n      if (isOverflowed(value, length)) {\r\n        throw `Truncation error, length must be larger than ${binString.length} for value ${value}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(value, length) {\r\n    this.#value = value;\r\n    this.#length = length;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      value: this.#value,\r\n      length: this.#length,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    const binString = dec2bin(this.#value);\r\n    return binString.padStart(this.#length, \"0\");\r\n  }\r\n}\r\n\r\n//\r\n// IntegerFibonacci\r\n//\r\n// Integer encoded using Fibonacci encoding\r\n// See “About Fibonacci Encoding” for more detail\r\n// https://github.com/InteractiveAdvertisingBureau/Global-Privacy-Platform/blob/main/Core/Consent%20String%20Specification.md#fibonacci-encoding-to-deal-with-string-length-\r\n\r\nclass IntegerFibonacci {\r\n  #value = null;\r\n\r\n  static Builder = class {\r\n    #value = 0;\r\n\r\n    setValue(value) {\r\n      if (!Number.isInteger(value) && value >= 0) {\r\n        throw \"value param must be a non-negative integer\";\r\n      }\r\n      this.#value = value;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      const integer = new IntegerFibonacci(this.#value);\r\n      return integer;\r\n    }\r\n  };\r\n\r\n  constructor(value) {\r\n    this.#value = value;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      value: this.#value,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    return int2Fibonacci(this.#value);\r\n  }\r\n}\r\n\r\n//\r\n// StringFixedLength\r\n//\r\n// A fixed amount of bit representing a string. The character’s ASCII integer ID is subtracted by 65 and encoded into an int(6).\r\n// Example: int(6) “101010” represents integer 47 + 65 = char “h”\r\n\r\nclass StringFixedLength {\r\n  #value = null;\r\n\r\n  static Builder = class {\r\n    #value = \"\";\r\n\r\n    setValue(value) {\r\n      this.#value = value;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      return new StringFixedLength(this.#value);\r\n    }\r\n  };\r\n\r\n  constructor(value) {\r\n    this.#value = value;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      value: this.#value,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    let encodedString = \"\";\r\n    let int6;\r\n    for (let char of this.#value) {\r\n      int6 = new IntegerFixedLength.Builder()\r\n        .setLength(6)\r\n        .setValue(char.charCodeAt(0) - 65)\r\n        .build();\r\n      encodedString += int6.encode2BitStr();\r\n    }\r\n    return encodedString;\r\n  }\r\n}\r\n\r\n//\r\n// Datetime\r\n//\r\n// A datetime is encoded as a 36 bit integer representing the 1/10th seconds since January 01 1970 00:00:00 UTC.\r\n// Example JavaScript representation: Math.round((new Date()).getTime()/100)\r\n\r\nclass Datetime {\r\n  #value = null;\r\n\r\n  static Builder = class {\r\n    #value = null;\r\n\r\n    setValue(value) {\r\n      if (!value instanceof Date) {\r\n        throw \"value param must be an Date\";\r\n      }\r\n      this.#value = value;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      return new Datetime(this.#value);\r\n    }\r\n  };\r\n\r\n  constructor(value) {\r\n    this.#value = value;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      value: this.#value,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    let int36 = new IntegerFixedLength.Builder()\r\n      .setLength(36)\r\n      .setValue(Math.round(this.#value.getTime() / 100))\r\n      .build();\r\n    return int36.encode2BitStr();\r\n  }\r\n}\r\n\r\n//\r\n// RangeInteger\r\n//\r\n\r\nclass RangeInteger {\r\n  #items = [];\r\n  #SINGLE = \"0\";\r\n  #GROUP = \"1\";\r\n\r\n  static Builder = class {\r\n    #items = [];\r\n    #lastValue = 0;\r\n    #SINGLE = \"0\";\r\n    #GROUP = \"1\";\r\n\r\n    addSingle(value) {\r\n      if (!Number.isInteger(value)) {\r\n        throw \"value param must be an integer\";\r\n      }\r\n      if (value <= this.#lastValue) {\r\n        throw \"Values must be added in sorted ascending order\";\r\n      }\r\n      this.#items.push({ type: this.#SINGLE, value: value });\r\n      this.#lastValue = value;\r\n      return this;\r\n    }\r\n\r\n    addGroup(fromValue, toValue) {\r\n      if (!Number.isInteger(fromValue)) {\r\n        throw \"fromValue param must be an integer\";\r\n      }\r\n      if (!Number.isInteger(toValue)) {\r\n        throw \"toValue param must be an integer\";\r\n      }\r\n      if (fromValue >= toValue) {\r\n        throw \"fromValue must be lower than toValue\";\r\n      }\r\n      if (fromValue <= this.#lastValue) {\r\n        throw \"Values must be added in sorted ascending order\";\r\n      }\r\n      this.#items.push({ type: this.#GROUP, fromValue, toValue });\r\n      this.#lastValue = toValue;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      return new RangeInteger(this.#items);\r\n    }\r\n  };\r\n\r\n  constructor(items) {\r\n    this.#items = items;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      items: this.#items,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    let encodedRange = \"\";\r\n    encodedRange += new IntegerFixedLength.Builder()\r\n      .setLength(12)\r\n      .setValue(this.#items.length)\r\n      .build()\r\n      .encode2BitStr();\r\n    let lastValue = 0;\r\n    this.#items.forEach((item, index) => {\r\n      if (item.type === this.#SINGLE) {\r\n        encodedRange += this.#SINGLE;\r\n        encodedRange += new IntegerFixedLength.Builder()\r\n          .setLength(16)\r\n          .setValue(item.value - lastValue)\r\n          .build()\r\n          .encode2BitStr();\r\n\r\n        lastValue = item.value;\r\n      } else if (item.type === this.#GROUP) {\r\n        encodedRange += this.#GROUP;\r\n        encodedRange += new IntegerFixedLength.Builder()\r\n          .setLength(16)\r\n          .setValue(item.fromValue - lastValue)\r\n          .build()\r\n          .encode2BitStr();\r\n        encodedRange += new IntegerFixedLength.Builder()\r\n          .setLength(16)\r\n          .setValue(item.toValue - item.fromValue)\r\n          .build()\r\n          .encode2BitStr();\r\n        lastValue = item.toValue;\r\n      }\r\n    });\r\n    return encodedRange;\r\n  }\r\n}\r\n\r\n//\r\n// RangeFibonacci\r\n//\r\n\r\nclass RangeFibonacci {\r\n  #items = [];\r\n  #SINGLE = \"0\";\r\n  #GROUP = \"1\";\r\n\r\n  static Builder = class {\r\n    #items = [];\r\n    #lastValue = 0;\r\n    #SINGLE = \"0\";\r\n    #GROUP = \"1\";\r\n\r\n    addSingle(value) {\r\n      if (!Number.isInteger(value)) {\r\n        throw \"value param must be an integer\";\r\n      }\r\n      if (value <= this.#lastValue) {\r\n        throw \"Values must be added in sorted ascending order\";\r\n      }\r\n      this.#items.push({ type: this.#SINGLE, value: value });\r\n      this.#lastValue = value;\r\n      return this;\r\n    }\r\n\r\n    addGroup(fromValue, toValue) {\r\n      if (!Number.isInteger(fromValue)) {\r\n        throw \"fromValue param must be an integer\";\r\n      }\r\n      if (!Number.isInteger(toValue)) {\r\n        throw \"toValue param must be an integer\";\r\n      }\r\n      if (fromValue >= toValue) {\r\n        throw \"fromValue must be lower than toValue\";\r\n      }\r\n      if (fromValue <= this.#lastValue) {\r\n        throw \"Values must be added in sorted ascending order\";\r\n      }\r\n      this.#items.push({ type: this.#GROUP, fromValue, toValue });\r\n      this.#lastValue = toValue;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      const rangeFibonacci = new RangeFibonacci(this.#items);\r\n      return rangeFibonacci;\r\n    }\r\n  };\r\n\r\n  constructor(items) {\r\n    this.#items = items;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      items: this.#items,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    let encodedRange = \"\";\r\n    encodedRange += new IntegerFixedLength.Builder()\r\n      .setLength(12)\r\n      .setValue(this.#items.length)\r\n      .build()\r\n      .encode2BitStr();\r\n\r\n    let lastValue = 0;\r\n    this.#items.forEach((item, index) => {\r\n      if (item.type === this.#SINGLE) {\r\n        encodedRange += this.#SINGLE;\r\n        encodedRange += int2Fibonacci(item.value - lastValue);\r\n        lastValue = item.value;\r\n      } else if (item.type === this.#GROUP) {\r\n        encodedRange += this.#GROUP;\r\n        encodedRange += int2Fibonacci(item.fromValue - lastValue);\r\n        encodedRange += int2Fibonacci(item.toValue - item.fromValue);\r\n        lastValue = item.toValue;\r\n      }\r\n    });\r\n    return encodedRange;\r\n  }\r\n}\r\n\r\n//\r\n// NBitField\r\n//\r\n\r\nclass NBitfield {\r\n  #nBits = null;\r\n  #nBitSize = null;\r\n\r\n  static Builder = class {\r\n    #nBits = [];\r\n    #nBitSize = 1;\r\n    #numBits = 0;\r\n\r\n    setNbitSize(nBitSize) {\r\n      if (!Number.isInteger(nBitSize) && nBitSize > 0) {\r\n        throw \"nBitSize param must be a positive integer\";\r\n      }\r\n      this.#nBitSize = nBitSize;\r\n      return this;\r\n    }\r\n\r\n    setNumBits(numBits) {\r\n      if (!Number.isInteger(numBits) && numBits > 0) {\r\n        throw \"numBits param must be a positive integer\";\r\n      }\r\n      this.#numBits = numBits;\r\n      for (let i = 0; i < numBits; i++) {\r\n        this.#nBits.push(\"0\".padStart(this.#nBitSize, \"0\"));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    setNBit(position, value) {\r\n      if (\r\n        !Number.isInteger(position) &&\r\n        position >= 1 &&\r\n        position <= this.#numBits\r\n      ) {\r\n        throw `position param must be a positive integer, from 1 to ${\r\n          this.#numBits\r\n        }`;\r\n      }\r\n      const integerFixedLength = new IntegerFixedLength.Builder()\r\n        .setLength(this.#nBitSize)\r\n        .setValue(value)\r\n        .build();\r\n      this.#nBits[position - 1] = integerFixedLength;\r\n      return this;\r\n    }\r\n\r\n    build() {\r\n      const nBitfield = new NBitfield(this.#nBitSize, this.#nBits);\r\n      return nBitfield;\r\n    }\r\n  };\r\n\r\n  constructor(nBitSize, nBits) {\r\n    this.#nBitSize = nBitSize;\r\n    this.#nBits = nBits;\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      nBitSize: this.#nBitSize,\r\n      nBits: this.#nBits,\r\n    });\r\n  }\r\n\r\n  encode2BitStr() {\r\n    let encodedRange = \"\";\r\n    this.#nBits.forEach((item) => {\r\n      encodedRange += item.encode2BitStr();\r\n    });\r\n    return encodedRange;\r\n  }\r\n}\r\nexport {\r\n  Boolean,\r\n  IntegerFixedLength,\r\n  IntegerFibonacci,\r\n  StringFixedLength,\r\n  Datetime,\r\n  RangeInteger,\r\n  RangeFibonacci,\r\n  NBitfield,\r\n};\r\n","export function dec2bin(dec) {\r\n  return dec.toString(2);\r\n}\r\n\r\nexport function isOverflowed(value, length) {\r\n  return dec2bin(value).length > length;\r\n}\r\n\r\nexport function int2Fibonacci(n) {\r\n  const fib = new Array(n);\r\n\r\n  function largestFiboLessOrEqual(num) {\r\n    fib[0] = 1;\r\n    fib[1] = 2;\r\n    let i;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (i = 2; fib[i - 1] <= num; i++) {\r\n      fib[i] = fib[i - 1] + fib[i - 2];\r\n    }\r\n    return i - 2;\r\n  }\r\n\r\n  function fibonacciEncode(number) {\r\n    const index = largestFiboLessOrEqual(number);\r\n    let num = number;\r\n    const codeword = new Array(index + 3);\r\n    let i = index;\r\n    while (num > 0) {\r\n      codeword[i] = \"1\";\r\n      num -= fib[i];\r\n      i -= 1;\r\n      while (i >= 0 && fib[i] > num) {\r\n        codeword[i] = \"0\";\r\n        i -= 1;\r\n      }\r\n    }\r\n    // Additional '1' bit\r\n    codeword[index + 1] = \"1\";\r\n    const string = codeword.join(\"\");\r\n    // Return pointer to codeword\r\n    return string;\r\n  }\r\n  const code = fibonacciEncode(n);\r\n  return code;\r\n}\r\n\r\nexport function encode2BitStr2Base64Websafe(bitStr) {\r\n  let fibcode = bitStr;\r\n  fibcode = padString6bits(fibcode);\r\n  const fibcodeDivided = fibcode.match(/.{1,6}/g);\r\n  return fibcodeDivided\r\n    .map((str) => {\r\n      // console.log(parseInt(str, 2) + 65);\r\n      return String.fromCharCode(parseInt(str, 2) + 65);\r\n    })\r\n    .join(\"\");\r\n}\r\n\r\nfunction padString6bits(string) {\r\n  let mod = string.length % 6;\r\n  // We don't require any padding\r\n  if (!mod) return string;\r\n  // See how much padding we need\r\n  let rem = 6 - mod;\r\n  let pad = \"\".padEnd(rem, \"0\");\r\n  return string + pad;\r\n}\r\n","// eslint-disable-next-line max-classes-per-file\nimport { IntegerFixedLength, NBitfield } from \"../../../core/data-types\";\n\nclass UspcaSection {\n  gppSectionID = 8;\n  clientSideAPIPrefix = \"uspca\";\n  version = new IntegerFixedLength.Builder().setLength(6).setValue(1).build();\n  #saleOptOutNotice = null;\n  #sharingOptOutNotice = null;\n  #sensitiveDataLimitUseNotice = null;\n  #saleOptOut = null;\n  #sharingOptOut = null;\n  #sensitiveDataProcessing = null;\n  #knownChildSensitiveDataConsents = null;\n  #personalDataConsents = null;\n  #mspaCoveredTransaction = null;\n  #mspaOptOutOptionMode = null;\n  #mspaServiceProviderMode = null;\n\n  static Builder = class {\n    #saleOptOutNotice = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #sharingOptOutNotice = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #sensitiveDataLimitUseNotice = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #saleOptOut = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #sharingOptOut = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #sensitiveDataProcessing = new NBitfield.Builder()\n      .setNbitSize(2)\n      .setNumBits(9)\n      .setNBit(1, 0)\n      .setNBit(2, 0)\n      .setNBit(3, 0)\n      .setNBit(4, 0)\n      .setNBit(5, 0)\n      .setNBit(6, 0)\n      .setNBit(7, 0)\n      .setNBit(8, 0)\n      .setNBit(9, 0)\n      .build();\n    #knownChildSensitiveDataConsents = new NBitfield.Builder()\n      .setNbitSize(2)\n      .setNumBits(2)\n      .setNBit(1, 0)\n      .setNBit(2, 0)\n      .build();\n    #personalDataConsents = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #mspaCoveredTransaction = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #mspaOptOutOptionMode = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n    #mspaServiceProviderMode = new IntegerFixedLength.Builder()\n      .setLength(2)\n      .setValue(0)\n      .build();\n\n    setSaleOptOutNotice(saleOptOutNotice) {\n      if (saleOptOutNotice < 0 || saleOptOutNotice > 2) {\n        throw `param value ${saleOptOutNotice} of setSaleOptOutNotice method must be a non-negative integer between 0 and 2`;\n      }\n      this.#saleOptOutNotice = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(saleOptOutNotice)\n        .build();\n      return this;\n    }\n\n    setSharingOptOutNotice(sharingOptOutNotice) {\n      if (sharingOptOutNotice < 0 || sharingOptOutNotice > 2) {\n        throw `param value ${sharingOptOutNotice} of setSharingOptOutNotice method must be a non-negative integer between 0 and 2`;\n      }\n      this.#sharingOptOutNotice = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(sharingOptOutNotice)\n        .build();\n      return this;\n    }\n\n    setSensitiveDataLimitUseNotice(sensitiveDataLimitUseNotice) {\n      if (sensitiveDataLimitUseNotice < 0 || sensitiveDataLimitUseNotice > 2) {\n        throw `param value ${sensitiveDataLimitUseNotice} of setSensitiveDataLimitUseNotice method must be a non-negative integer between 0 and 2`;\n      }\n      this.#sensitiveDataLimitUseNotice = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(sensitiveDataLimitUseNotice)\n        .build();\n      return this;\n    }\n\n    setSaleOptOut(saleOptOut) {\n      if (saleOptOut < 0 || saleOptOut > 2) {\n        throw `param value ${saleOptOut} of setSaleOptOut method must be a non-negative integer between 0 and 2`;\n      }\n      this.#saleOptOut = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(saleOptOut)\n        .build();\n      return this;\n    }\n\n    setSharingOptOut(sharingOptOut) {\n      if (sharingOptOut < 0 || sharingOptOut > 2) {\n        throw `param value ${sharingOptOut} of setSharingOptOut method must be a non-negative integer between 0 and 2`;\n      }\n      this.#sharingOptOut = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(sharingOptOut)\n        .build();\n      return this;\n    }\n\n    setSensitiveDataProcessing(sensitiveDataProcessing) {\n      if (\n        !Array.isArray(sensitiveDataProcessing) ||\n        sensitiveDataProcessing.length !== 9\n      ) {\n        throw `param in setSensitiveDataProcessing method must be an Array of length 9`;\n      }\n      const nbitfield = new NBitfield.Builder().setNbitSize(2).setNumBits(9);\n\n      for (let n = 0; n < 9; n++) {\n        const bitValue = sensitiveDataProcessing[n];\n        nbitfield.setNBit(n + 1, bitValue);\n      }\n      this.#sensitiveDataProcessing = nbitfield.build();\n      return this;\n    }\n\n    setKnownChildSensitiveDataConsents(knownChildSensitiveDataConsents) {\n      if (\n        !Array.isArray(knownChildSensitiveDataConsents) ||\n        knownChildSensitiveDataConsents.length !== 2\n      ) {\n        throw `param value ${knownChildSensitiveDataConsents} of section in setKnownChildSensitiveDataConsents method must be an Array of length 2`;\n      }\n      const nbitfield = new NBitfield.Builder().setNbitSize(2).setNumBits(2);\n      for (let n = 0; n < 2; n++) {\n        const bitValue = knownChildSensitiveDataConsents[n];\n        nbitfield.setNBit(n + 1, bitValue);\n      }\n      this.#knownChildSensitiveDataConsents = nbitfield.build();\n      return this;\n    }\n\n    setPersonalDataConsents(personalDataConsents) {\n      if (personalDataConsents < 0 || personalDataConsents > 2) {\n        throw `param value ${sharingOptOut} of setPersonalDataConsents method must be a non-negative integer between 0 and 2`;\n      }\n      this.#personalDataConsents = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(personalDataConsents)\n        .build();\n      return this;\n    }\n\n    setMspaCoveredTransaction(mspaCoveredTransaction) {\n      if (mspaCoveredTransaction < 0 || mspaCoveredTransaction > 2) {\n        throw `param value ${mspaCoveredTransaction} of setMspaCoveredTransaction method must be a non-negative integer between 0 and 2`;\n      }\n      this.#mspaCoveredTransaction = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(mspaCoveredTransaction)\n        .build();\n      return this;\n    }\n\n    setMspaOptOutOptionMode(mspaOptOutOptionMode) {\n      if (mspaOptOutOptionMode < 0 || mspaOptOutOptionMode > 2) {\n        throw `param value ${sharingOptOut} of setMspaOptOutOptionMode method must be a non-negative integer between 0 and 2`;\n      }\n      this.#mspaOptOutOptionMode = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(mspaOptOutOptionMode)\n        .build();\n      return this;\n    }\n\n    setMspaServiceProviderMode(mspaServiceProviderMode) {\n      if (mspaServiceProviderMode < 0 || mspaServiceProviderMode > 2) {\n        throw `param value ${sharingOptOut} of setMspaServiceProviderMode method must be a non-negative integer between 0 and 2`;\n      }\n      this.#mspaServiceProviderMode = new IntegerFixedLength.Builder()\n        .setLength(2)\n        .setValue(mspaServiceProviderMode)\n        .build();\n      return this;\n    }\n\n    build() {\n      const gppString = new UspcaSection(\n        this.#saleOptOutNotice,\n        this.#sharingOptOutNotice,\n        this.#sensitiveDataLimitUseNotice,\n        this.#saleOptOut,\n        this.#sharingOptOut,\n        this.#sensitiveDataProcessing,\n        this.#knownChildSensitiveDataConsents,\n        this.#personalDataConsents,\n        this.#mspaCoveredTransaction,\n        this.#mspaOptOutOptionMode,\n        this.#mspaServiceProviderMode\n      );\n      return gppString;\n    }\n  };\n\n  constructor(\n    saleOptOutNotice,\n    sharingOptOutNotice,\n    sensitiveDataLimitUseNotice,\n    saleOptOut,\n    sharingOptOut,\n    sensitiveDataProcessing,\n    knownChildSensitiveDataConsents,\n    personalDataConsents,\n    mspaCoveredTransaction,\n    mspaOptOutOptionMode,\n    mspaServiceProviderMode\n  ) {\n    this.#saleOptOutNotice = saleOptOutNotice;\n    this.#sharingOptOutNotice = sharingOptOutNotice;\n    this.#sensitiveDataLimitUseNotice = sensitiveDataLimitUseNotice;\n    this.#saleOptOut = saleOptOut;\n    this.#sharingOptOut = sharingOptOut;\n    this.#sensitiveDataProcessing = sensitiveDataProcessing;\n    this.#knownChildSensitiveDataConsents = knownChildSensitiveDataConsents;\n    this.#personalDataConsents = personalDataConsents;\n    this.#mspaCoveredTransaction = mspaCoveredTransaction;\n    this.#mspaOptOutOptionMode = mspaOptOutOptionMode;\n    this.#mspaServiceProviderMode = mspaServiceProviderMode;\n  }\n\n  encode2BitStr() {\n    let bitStr = \"\";\n    bitStr += this.version.encode2BitStr();\n    bitStr += this.#saleOptOutNotice.encode2BitStr();\n    bitStr += this.#sharingOptOutNotice.encode2BitStr();\n    bitStr += this.#sensitiveDataLimitUseNotice.encode2BitStr();\n    bitStr += this.#saleOptOut.encode2BitStr();\n    bitStr += this.#sharingOptOut.encode2BitStr();\n    bitStr += this.#sensitiveDataProcessing.encode2BitStr();\n    bitStr += this.#knownChildSensitiveDataConsents.encode2BitStr();\n    bitStr += this.#personalDataConsents.encode2BitStr();\n    bitStr += this.#mspaCoveredTransaction.encode2BitStr();\n    bitStr += this.#mspaOptOutOptionMode.encode2BitStr();\n    bitStr += this.#mspaServiceProviderMode.encode2BitStr();\n    // const b64 = Buffer.from(bitStr, \"base64url\");\n    return bitStr;\n  }\n}\n\nexport { UspcaSection };\n"],"names":[],"version":3,"file":"index.cjs.map"}